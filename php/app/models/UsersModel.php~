<?php

class UsersModel
{
    private $table = 'users';
    private $db;


    public function __construct()
    {
        $this->db = new Database;
    }

    public function checkUserExists()
    {
        $this->db->query('SELECT COUNT(*) AS user_count FROM users');
        $result = $this->db->single();
        return $result['user_count'] > 0;
    }

    public function addDefaultUser()
    {
        $defaultData = [
            'name' => 'admin',
            'username' => 'admin',
            'email' => 'admin@example.com',
            'profile_picture' => null,
            'password' => password_hash('123', PASSWORD_BCRYPT),
            'role_id' => 1
        ];

        $this->db->query('INSERT INTO users (name, username, email, profile_picture, password, role_id) VALUES (:name, :username, :email, :profile_picture, :password, :role_id)');
        $this->db->bind(':name', $defaultData['name']);
        $this->db->bind(':username', $defaultData['username']);
        $this->db->bind(':email', $defaultData['email']);
        $this->db->bind(':profile_picture', $defaultData['profile_picture']);
        $this->db->bind(':password', $defaultData['password']);
        $this->db->bind(':role_id', $defaultData['role_id']);
        $this->db->execute();
    }

    public function getUser()
    {
        $this->db->query('SELECT * FROM users');
        return $this->db->resultSet();
    }

    public function getUserByRole($role)
    {
        $this->db->query('SELECT * FROM users WHERE role_id = :role_id');
        $this->db->bind(':role_id', $role);
        return $this->db->resultSet();
    }

    public function addUser($email, $data, $photo)
    {
        $query = "INSERT INTO users
                    (name, username, password, email, profile_picture, role_id)
                  VALUES
                    (:name, :username, :password, :email, :profile_picture, :role_id)";

        $this->db->query($query);
        $this->db->bind(':name', $data['name']);
        $this->db->bind(':username', $data['username']);
        // Hash password menggunakan BCRYPT
        $this->db->bind(':password', password_hash($data['password'], PASSWORD_BCRYPT));
        $this->db->bind(':email', $email);
        $this->db->bind(':profile_picture', $photo);
        $this->db->bind(':role_id', $data['role']);

        try {
            $this->db->execute();
            return $this->db->rowCount();
        } catch (PDOException $e) {
            error_log('Database Error (addUser): ' . $e->getMessage());
            return false;
        }
    }

    public function getUserByUsername($username)
    {
        $query = "SELECT * FROM users WHERE username = :username";
        $this->db->query($query);
        $this->db->bind(':username', $username);
        return $this->db->single();
    }

    public function getUserById($id)
    {
        $query = "SELECT * FROM users WHERE user_id = :user_id";
        $this->db->query($query);
        $this->db->bind(':user_id', $id);
        return $this->db->single();
    }

    public function getProfilePicture($id)
    {
        $query = "SELECT profile_picture FROM users WHERE user_id = :user_id";
        $this->db->query($query);
        $this->db->bind(':user_id', $id);
        return $this->db->single();
    }

    public function deleteUser($id)
    {
        $query = "DELETE FROM users WHERE user_id = :user_id";
        $this->db->query($query);
        $this->db->bind(':user_id', $id);
        try {
            $this->db->execute();
            return $this->db->rowCount();
        } catch (PDOException $e) {
            error_log('Database Error (deleteUser): ' . $e->getMessage());
            return false;
        }
    }


    //fungsi mengedit user
//    public function editUser($email, $id, $data, $photo, $password)
//    {
//        $this->db->query('EXEC sp_EditUser :user_id, :name, :username, :email, :profile_picture, :password, :role_id');
//        $this->db->bind(':user_id', $id);
//        $this->db->bind(':name', $data['name']);
//        $this->db->bind(':username', $data['username']);
//        $this->db->bind(':email', $email);
//        $this->db->bind(':profile_picture', $photo);
//        $this->db->bind(':password', $password);
//        $this->db->bind(':role_id', $data['role_id']);
//        $this->db->execute();
//        return $this->db->rowCount();
//    }
//
//    public function isEmailExists($email, $userId = null)
//    {
//        if ($userId === null) {
//            // Jika userId tidak diberikan, cukup cek berdasarkan email
//            $query = "SELECT * FROM users WHERE email = :email";
//            $this->db->query($query);
//            $this->db->bind('email', $email);
//        } else {
//            // Jika userId diberikan, tambahkan kondisi untuk mengecualikan user_id
//            $query = "SELECT * FROM users WHERE email = :email AND user_id != :user_id";
//            $this->db->query($query);
//            $this->db->bind('email', $email);
//            $this->db->bind('user_id', $userId);
//        }
//
//        return $this->db->single() ? true : false;
//    }
//
//
//    public function isUsernameExists($username, $userId = null)
//    {
//        $query = "SELECT * FROM users WHERE username = :username AND user_id != :user_id";
//        $this->db->query($query);
//        $this->db->bind('username', $username);
//        $this->db->bind('user_id', $userId);
//        return $this->db->single() ? true : false;
//    }
//
//    public function getUsersWithPagination($limit, $offset)
//    {
//        $query = "EXEC GetUsersWithPagination :Limit, :Offset";
//
//        $this->db->query($query);
//        $this->db->bind(':Limit', $limit, PDO::PARAM_INT);
//        $this->db->bind(':Offset', $offset, PDO::PARAM_INT);
//
//        return $this->db->resultSet();
//    }
//
//    public function getTotalUsers()
//    {
//        $query = "EXEC GetTotalUsers";
//        $this->db->query($query);
//        $result = $this->db->single();
//        return $result ? (int)$result['Total'] : 0;
//    }
//
//    public function validateUser($name, $username, $email)
//    {
//        // Query untuk SQL Server
//        $this->db->query("
//            SELECT
//                SUM(CASE WHEN name = :name THEN 1 ELSE 0 END) AS name_count,
//                SUM(CASE WHEN username = :username THEN 1 ELSE 0 END) AS username_count,
//                SUM(CASE WHEN email = :email THEN 1 ELSE 0 END) AS email_count
//            FROM users
//        ");
//        $this->db->bind(':name', $name);
//        $this->db->bind(':username', $username);
//        $this->db->bind(':email', $email);
//
//        $result = $this->db->single();
//
//        // Mengembalikan hasil validasi
//        return [
//            'name_exists' => $result['name_count'] > 0,
//            'username_exists' => $result['username_count'] > 0,
//            'email_exists' => $result['email_count'] > 0
//        ];
//    }
//
//    public function searchUsers($keyword, $pageNumber, $pageSize)
//    {
//        $query = "EXEC dbo.sp_searchUsers @Keyword = ?, @PageNumber = ?, @PageSize = ?";
//        $this->db->query($query);
//        $this->db->bind(1, $keyword);
//        $this->db->bind(2, $pageNumber);
//        $this->db->bind(3, $pageSize);
//        return [
//            'data' => $this->db->resultSet(),
//            'totalCount' => $this->db->single()['TotalCount'] ?? 0
//        ];
//    }

}