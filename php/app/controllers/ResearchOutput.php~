<?php

class ResearchOutput extends Controller
{
    public function index()
    {
        $this->view("main/hasilpenelitian");
    }

    public function uploadResearchView()
    {
        $this->checkLogin();
        $role = $this->checkRole();
        $this->checkSessionTimeOut();
        if ($role == 2) {
            $this->saveLastVisitedPage();
            $this->view('user/upload-file');
        } else {
            header('Location: ' . $this->getLastVisitedPage());
        }
    }

    public function verifyResearchView()
    {
        $this->checkLogin();
        $role = $this->checkRole();
        $this->checkSessionTimeOut();
        if ($role == 1) {
            $this->saveLastVisitedPage();
            $galleryModel = $this->model('ResearchOutputModel');
            $images = $galleryModel->getPendingImages();
//            echo '<pre>';
//            print_r($images);
//            echo '</pre>';
            $this->view('admin/verifyImages', compact('images'));
        } else {
            header('Location: ' . $this->getLastVisitedPage());
        }
    }

    public function researchHistoryView($status = 'all')
    {
        $this->checkLogin();
        $role = $this->checkRole();
        $this->checkSessionTimeOut();

        if ($role == 2) {
            $this->saveLastVisitedPage();

            $galleryModel = $this->model('ResearchOutputModel');
            $userId = $_SESSION['user_id'];

            // Filter berdasarkan status
            if ($status === 'all') {
                $images = $galleryModel->getImagesByUser($userId);
            } else {
                $images = $galleryModel->getImagesByUserAndStatus($userId, $status);
            }

            $totalImages = count($images);

            $this->view('user/image-history', [
                'totalImages' => $totalImages,
                'images' => $images,
                'selectedStatus' => $status  // Menggunakan 'selectedStatus' secara konsisten
            ]);
        } else {
            header('Location: ' . $this->getLastVisitedPage());
        }
    }

    public function uploadFile()
    {
        $this->checkLogin();
        $uploaded_by = $_SESSION['user_id'];

        if ($_SERVER['REQUEST_METHOD'] === 'POST') {
            $response = ['success' => false, 'message' => ''];

            // Validasi field input
            $title = htmlspecialchars(trim($_POST['fileTitle'] ?? ''));
            $category = htmlspecialchars(trim($_POST['category'] ?? ''));
            $description = htmlspecialchars(trim($_POST['description'] ?? ''));

            if (empty($title) || empty($category) || empty($description)) {
                $response['message'] = 'Semua field wajib diisi.';
                echo json_encode($response);
                return;
            }

            // Validasi file
            if (isset($_FILES['file']) && $_FILES['file']['error'] === UPLOAD_ERR_OK) {
                $file = $_FILES['file'];

                // Tentukan direktori tujuan
                $uploadDir = __DIR__ . '/../files/research_output/';
                if (!is_dir($uploadDir)) {
                    mkdir($uploadDir, 0777, true);
                }

                // Dapatkan ekstensi file
                $fileExtension = strtolower(pathinfo($file['name'], PATHINFO_EXTENSION));
                $allowedExtensions = ['pdf', 'jpg', 'jpeg', 'png', 'gif', 'doc', 'docx', 'xlsx'];

                if (in_array($fileExtension, $allowedExtensions)) {
                    // Nama file unik
                    $fileName = uniqid() . '.' . $fileExtension;
                    $filePath = $uploadDir . $fileName;

                    // Pindahkan file ke direktori tujuan
                    if (move_uploaded_file($file['tmp_name'], $filePath)) {
                        // Simpan ke database
                        $researchModel = $this->model('ResearchOutputModel');
                        $saveSuccess = $researchModel->create(
                            '/uploads/' . $fileName,
                            $uploaded_by,
                            $title,
                            $category,
                            $description
                        );

                        if ($saveSuccess) {
                            $response['success'] = true;
                            $response['message'] = 'File berhasil diunggah.';
                        } else {
                            unlink($filePath); // Hapus file jika gagal menyimpan ke database
                            $response['message'] = 'Gagal menyimpan data ke database.';
                        }
                    } else {
                        $response['message'] = 'Gagal memindahkan file.';
                    }
                } else {
                    $response['message'] = 'Ekstensi file tidak didukung.';
                }
            } else {
                $response['message'] = 'Tidak ada file yang diunggah atau terjadi kesalahan.';
            }

            echo json_encode($response);
        } else {
            echo json_encode(['success' => false, 'message' => 'Metode tidak valid.']);
        }
    }




}